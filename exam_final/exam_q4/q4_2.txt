1. Implementing `Send` would allow multiple threads to have access simultaneously
to the same `Rc<T>` instance which could result in concurrent mutation of the
reference count. We would get data races, and by intentionally not implementing
`Send` we ensure that it can be safely shared between threads.

2. If this were the case, `Arc<T>` would allow multiple threads to concurrently
own the same `Arc<T>` instance regardless of whether or not `T` is thread-safe
This would be an issue if `T` is not `Sync` since `T` would not be thread-safe
and couldn't be accessed concurrently without synchronisation.
By implementing Send if and only if T implements Sync, we are ensuring that `T`
is thread-safe and avoids memory safety issues, and data races.

